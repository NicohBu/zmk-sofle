#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    as_ht: autoshift_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "AUTOSHIFT_HOLD_TAP";
        bindings = <&shift>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <190>;
    };

    horizontal_scroll_encoder: horizontal_scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_LEFT>, <&msc SCRL_LEFT>;

        tap-ms = <100>;
    };

    vertical_scroll_encoder: vertical_scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

        tap-ms = <100>;
    };

    macros {
        shift: shift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "SHIFT";
        };

        as: as {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AS";
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            display-name = "AutoSHIFT";
            bindings = <
&lt 1 ESC                   &as N1     &as N2        &as N3        &as N4  &as N5       &mmv MOVE_UP     &as N6     &as N7       &as N8         &as N9   &as N0         &kp BACKSPACE
&kp TAB                     &as Q      &as W         &as E         &as R   &as T        &mmv MOVE_DOWN   &as Y      &as U        &as I          &as O    &as P          &as LBKT
&kp LSHFT                   &as A      &as S         &as D         &as F   &as G        &mmv MOVE_LEFT   &as H      &as J        &as K          &as L    &as SEMI       &as APOS
&mt LCTRL NON_US_BACKSLASH  &as Z      &as X         &as C         &as V   &as B        &mmv MOVE_RIGHT  &as N      &as M        &as COMMA      &as DOT  &kp LS(MINUS)  &mt RSHFT EQUAL
&kp C_MUTE                  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 2   &kp SPACE    &mkp LCLK        &kp SPACE  &lt 2 ENTER  &kp RIGHT_ALT  &to 3    &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
        };

        F+Num+Music {
            bindings = <
&trans    &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp C_STOP        &kp KP_NUMLOCK  &kp FSLH  &kp LPAR  &kp RPAR  &kp EQUAL     &trans
&trans    &trans  &trans  &trans  &trans  &trans    &trans            &kp PRCNT       &kp N7    &kp N8    &kp N9    &as MINUS     &as RIGHT_BRACKET
&kp CAPS  &trans  &trans  &trans  &trans  &trans    &kp C_PREV        &kp DLLR        &kp N4    &kp N5    &kp N6    &kp KP_SLASH  &kp KP_MULTIPLY
&trans    &trans  &trans  &trans  &trans  &trans    &kp C_NEXT        &kp HASH        &kp N1    &kp N2    &kp N3    &trans        &kp KP_ENTER
&trans    &trans  &trans  &trans  &trans  &trans    &kp C_PLAY_PAUSE  &trans          &trans    &kp N0    &kp DOT   &kp KP_ENTER
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        F+Arrows {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &trans  &kp F6              &kp F7    &kp F8    &kp F9     &kp F10        &kp F11
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LC(HOME)        &kp HOME  &kp UP    &kp END    &kp LC(END)    &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LC(LEFT_ARROW)  &kp LEFT  &kp DOWN  &kp RIGHT  &kp LC(RIGHT)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans              &trans    &trans    &trans     &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans              &trans    &trans    &trans     &trans
            >;

            sensor-bindings = <&vertical_scroll_encoder>;
        };

        Config {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &trans  &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &trans  &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &trans  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &trans  &trans  &trans  &trans      &trans     &trans
            >;
        };

        F+Mouse-NOT_USED {
            bindings = <
&kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &trans  &kp F6  &kp F7          &kp F8          &kp F9           &kp F10  &kp F11
&trans   &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans          &trans          &trans           &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans          &trans          &trans           &trans
            >;

            sensor-bindings = <&horizontal_scroll_encoder>;
        };

        layer0-NOT_USED {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9           &kp N0      &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O            &kp P       &kp BSLH
&kp CAPS    &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L            &kp SEMI    &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT          &kp FSLH    &kp ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE    &kp ENTER        &kp SPACE  &kp ENTER  &mo 6      &kp RIGHT_SHIFT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };
    };
};
